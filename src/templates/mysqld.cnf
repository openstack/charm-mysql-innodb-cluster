#
# The MySQL database server configuration file.
#
# One can use all long options that the program supports.
# Run program with --help to get a list of available options and with
# --print-defaults to see which it would actually understand and use.
#
# For explanations see
# http://dev.mysql.com/doc/mysql/en/server-system-variables.html

# Here is entries for some specific programs
# The following values assume you have at least 32M ram

[mysqld]
#
# * Basic Settings
#
user		= mysql
pid-file	= /var/run/mysqld/mysqld.pid
socket	= /var/run/mysqld/mysqld.sock
# port		= 3306
datadir	= /var/lib/mysql

# Note: This is the non-interactive timeout setting. If you use an interactive
# client like mysql client this value is displayed based on the
# interactive_timeout value.
wait_timeout = {{ options.wait_timeout }}

# If MySQL is running as a replication slave, this should be
# changed. Ref https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_tmpdir
# tmpdir		= /tmp
#
# Instead of skip-networking the default is now to listen only on
# localhost which is more compatible and is not less secure.
bind-address = {{ options.cluster_address }}
report_host = {{ options.cluster_address }}
#
# * Fine Tuning
#
key_buffer_size		= 32M
# max_allowed_packet	= 64M
# thread_stack		= 256K
table_open_cache        = {{ options.table_open_cache }}
# thread_cache_size       = -1

# This replaces the startup script and checks MyISAM tables if needed
# the first time they are touched
myisam-recover-options  = BACKUP

# max_connections        = 151
{% if options.max_connections != -1 -%}
max_connections = {{ options.max_connections }}
{% endif %}


# table_open_cache       = 4000

#
# * Logging and Replication
#
# Both location gets rotated by the cronjob.
#
# Log all queries
# Be aware that this log type is a performance killer.
# general_log_file        = /var/log/mysql/query.log
# general_log             = 1
#
# Error log - should be very few entries.
#
log_error = /var/log/mysql/error.log
#
# Here you can see queries with especially long duration
# slow_query_log		= 1
# slow_query_log_file	= /var/log/mysql/mysql-slow.log
# long_query_time = 2
# log-queries-not-using-indexes
#
# The following can be used as easy to replay backup logs or for replication.
# note: if you are setting up a replication slave, see README.Debian about
#       other settings you may need to change.
{% if options.enable_binlogs -%}
log_bin={{ options.binlogs_path }}
{% endif %}

binlog_expire_logs_seconds   = {{ options.binlog_expire_logs_seconds_adapter }}
max_binlog_size         = {{ options.binlogs_max_size }}
# binlog_expire_logs_seconds	= 2592000
# binlog_do_db		= include_database_name
# binlog_ignore_db	= include_database_name
#
# InnoDB Clustering Settings
# +--------------------------+---------------+----------------
# | Variable                 | Current Value | Required Value
# +--------------------------+---------------+----------------
# | binlog_checksum          | CRC32         | NONE
# | enforce_gtid_consistency | OFF           | ON
# | gtid_mode                | OFF           | ON
# | server_id                | 1             | <unique ID>
# +--------------------------+---------------+----------------
binlog_checksum = NONE
enforce_gtid_consistency = ON
gtid_mode = ON
server_id = {{ options.server_id }}

skip_name_resolve = ON

#
# * InnoDB
#
{% if options.innodb_file_per_table -%}
# This enables storing InnoDB tables in separate .ibd files. Note that, however
# existing InnoDB tables will remain in ibdata file(s) unles OPTIMIZE is run
# on them. Still, the ibdata1 file will NOT shrink - a full dump/import of the
# data is needed in order to get rid of large ibdata file.
innodb_file_per_table = 1
{% else -%}
innodb_file_per_table = 0
{% endif %}

# safest = 1 (default)
# fast   = 2
# unsafe = 0
innodb_flush_log_at_trx_commit = {{ options.innodb_flush_log_at_trx_commit_adapter }}

innodb_buffer_pool_size = {{ options.innodb_buffer_pool_size_adapter }}

{% if options.innodb_change_buffering -%}
innodb_change_buffering = {{ options.innodb_change_buffering_adapter }}
{% endif %}

{% if options.innodb_io_capacity -%}
innodb_io_capacity = {{ options.innodb_io_capacity }}
{% endif %}

{% if options.tls_enabled -%}
#tls_version=TLSv1.2,TLSv1.3
ssl_ca=/etc/ssl/certs/ca-certificates.crt
ssl_cert=/etc/mysql/tls/{{ options.charm_instance.name }}/cert_{{ options.db_router_address }}
ssl_key=/etc/mysql/tls/{{ options.charm_instance.name }}/key_{{ options.db_router_address }}
#require-secure-transport = ON
{% endif %}
